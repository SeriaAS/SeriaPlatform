<?php
	class SERIA_QuickFormFactory
	{
		static function generateCode($fluentClassName, $formClassName, $caption, $formSpec, $isDeletable=false)
		{
			$fieldSpec = SERIA_Fluent::getFieldSpec($fluentClassName);
			eval('
				$fluentSpec = '.$fluentClassName.'::fluentSpec();
//				$fieldSpec = '.$fluentClassName.'::getFi__REMOVED__eldSpec();
			');

			$code = '

class '.$formClassName.' extends SERIA_Form {

	public static function getFormSpec() 	{ return '.var_export($formSpec, true).'; }
	public static function caption() 	{ return '.var_export($caption, true).'; }
	public function isDeletable()	{ return $this->object->isDeletable(); }
	public function _handle($data)  {
		foreach($this->getFieldSpec() as $fieldName => $spec)
		{
			if(isset($data[$fieldName]))
				$this->object->set($fieldName, $data[$fieldName]);
		}
		$this->object->save();
		return;
	}
}
';

			return $code;
		}

		/**
		 * Create a form-class by evaling autogenerated code.
		 *
		 * @param unknown_type $fluentClassName
		 * @param unknown_type $formClassName
		 * @param unknown_type $caption
		 * @param unknown_type $formSpec
		 * @param unknown_type $isDeletable
		 * @return unknown_type
		 */
		public static function createFormClass($fluentClassName, $formClassName, $caption, $formSpec, $isDeletable=false)
		{
			/*
			 * Remove after: 2010-04-01 (or if another API change requires removal).
			 * Avoid removal before: 2010-01-10
			 * API compat and migration check. (Solution: Fix calling code by removing one of the captions from call.)
			 */
			if ($isDeletable !== false && $isDeletable !== true && is_array($isDeletable))
				throw new SERIA_Exception('BROKEN OLD API: Previously took both a $createCaption and an $editCaption. Changed to only ONE $caption as distinguishing is not possible in static context. Fix calling code.');

			$code = self::generateCode($fluentClassName, $formClassName, $caption, $formSpec, $isDeletable);
			eval($code);
		}
	}
